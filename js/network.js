import { URL_UPLOAD, URL_DOWNLOAD } from './settings.js';

/*
  #################################################################################
  ##########                  ОТПРАВКА ДАННЫХ НА СЕРВЕР                  ##########
  #################################################################################
*/

// Отправка данных на сервер
const getUploadToServer = (form, onSuccess, onError, onCloseForm) => {
  fetch(URL_UPLOAD, { // отправляем данные на сервер
    method: 'POST', // отправляем методом POST
    body: form // данные формы которая отправляется
  }).then((response) => { // получаем ответ
    if (!response.ok) { // если данные не отправлены
      onError(); // выдаем сообщение об ошибки
      return; // завершаем работу
    }
    onCloseForm(); // если ошибки не было, закрываем форму
    onSuccess(); // показываем сообщение об успешной отправке
  })
    .catch(() => {
      onError(); // выдаем сообщение об ошибки
    }
    );
};

/*
  #################################################################################
  ##########                  ПОЛУЧЕНИЕ ДАННЫХ С СЕРВЕРА                 ##########
  #################################################################################
*/

// Получение данных с сервера
async function getDownloadToServer(onErrorData) { // асинхронная функция получения данных с сервера
  try { // блок исключений (обработки ошибок)
    const response = await fetch(URL_DOWNLOAD); // адрес сервера
    if (!response.ok) {
      throw new Error();
    }
    const data = await response.json(); // преобразовываем данные в json
    return data; // возвращаем полученные данные
  } catch (error) { // если возникла ошибка
    onErrorData(); // сообщаем об ошибке
  }
}

/*
  #################################################################################
  ##########                           ЭКСПОРТ                           ##########
  #################################################################################
*/

export { getUploadToServer, getDownloadToServer };
